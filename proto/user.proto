// [open-Q] User grpc service.
// https://github.com/open-Q/

syntax = "proto3";

package user;

import "google/protobuf/struct.proto";
import "google/protobuf/empty.proto";

// `User` represents grpc service for communicating with `user` microservice.
// https://github.com/open-Q/user
service User {
    rpc Create(CreateRequest) returns (UserResponse) {}
    rpc Find(FindFilter) returns (stream UserResponse) {}
    rpc FindOne(FindFilter) returns (UserResponse) {}
    rpc Delete(DeleteRequest) returns(google.protobuf.Empty) {}
    rpc Update(UpdateRequest) returns (UserResponse) {}
}

// `AccountStatus` represents list of available account statuses.
enum AccountStatus {
    PENDING = 0;
    ACTIVE = 1;
    BLOCKED = 2;
    DELETED = 3;
}

// `CreateRequest` represents request message to create a new user.
message CreateRequest {
	google.protobuf.Struct meta = 1;
}

// `UserResponse` represents user response model.
message UserResponse {
    string id = 1;
    AccountStatus status = 2;
    google.protobuf.Struct meta = 3;
}

// `FindFilter` represents filter model for finding users.
message FindFilter {
    repeated string ids = 1;
    repeated AccountStatus statuses = 2;
    google.protobuf.Struct metaPatterns = 3;
    int64 limit = 4;
    int64 offset = 5;
}

// `DeleteRequest` represents delete user request model.
message DeleteRequest {
    string id = 1;
}

// `UpdateRequest` represents update user request model.
message UpdateRequest {
    string id = 1;
    AccountStatus status = 2;
    google.protobuf.Struct metaFields = 3;
}
